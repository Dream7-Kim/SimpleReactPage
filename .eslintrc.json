{
	"root": true,
	"env": {
		"browser": true,
		"node": true,
		"es2021": true
	},
	"parser": "@typescript-eslint/parser",
	"plugins": ["react-prefer-function-component"],
	"extends": [
		"eslint:all",
		"plugin:@typescript-eslint/all",
		"plugin:import/recommended",
		"plugin:import/typescript",
		"plugin:react/all",
		"plugin:jsx-a11y/recommended",
		"airbnb",
		"airbnb-typescript",
		"airbnb/hooks",
		"plugin:react/jsx-runtime",
		"plugin:unicorn/all",
		"plugin:react-prefer-function-component/recommended",
		"prettier"
	],
	"rules": {
		"no-unused-vars": "off",
		"no-param-reassign": "off",
		"no-dupe-else-if": "error",
		"no-promise-executor-return": "error",
		"no-unreachable-loop": "error",
		"no-useless-backreference": "error",
		"require-atomic-updates": "error",
		"default-case-last": "error",
		"grouped-accessor-pairs": "error",
		"no-constructor-return": "error",
		"no-implicit-coercion": "error",
		"prefer-regex-literals": "error",
		"capitalized-comments": "error",
		"unicorn/no-useless-undefined": "off",
		"unicorn/no-null": "off",
		"unicorn/prefer-module": "off",
		"unicorn/prevent-abbreviations": "off",
		"unicorn/numeric-separators-style": "off",
		"unicorn/require-number-to-fixed-digits-argument": "off",
		"unicorn/no-negated-condition": "off",
		"unicorn/no-array-for-each": "off",
		"unicorn/consistent-function-scoping": "off",
		"no-restricted-syntax": [
			"error",
			{
				"selector": "ForInStatement",
				"message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
			},
			{
				"selector": "LabeledStatement",
				"message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
			},
			{
				"selector": "WithStatement",
				"message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
			}
		],
		"no-void": "off",
		"arrow-body-style": "off",
		"import/prefer-default-export": "off",
		"import/no-extraneous-dependencies": "off",
		"unicorn/prefer-node-protocol": "off",
		"no-underscore-dangle": "off",
		"@typescript-eslint/no-type-alias": "off",
		"@typescript-eslint/no-unsafe-return": "off",
		"@typescript-eslint/no-extraneous-class": "off",
		"@typescript-eslint/no-redundant-type-constituents": "off",
		"@typescript-eslint/array-type": "off",
		"@typescript-eslint/sort-type-constituents": "off",
		"@typescript-eslint/prefer-nullish-coalescing": "off",
		"@typescript-eslint/no-unused-vars": "off",
		"@typescript-eslint/no-use-before-define": "off",
		"@typescript-eslint/no-unsafe-enum-comparison": "off",
		"@typescript-eslint/prefer-ts-expect-error": "off",
		"@typescript-eslint/no-useless-template-literals": "off",
		"@typescript-eslint/no-unsafe-member-access": "off",
		"@typescript-eslint/no-unsafe-assignment": "off",
		"@typescript-eslint/explicit-function-return-type": "off",
		"@typescript-eslint/consistent-type-imports": "off",
		"@typescript-eslint/no-explicit-any": "off",
		"@typescript-eslint/no-implied-eval": "off",
		"@typescript-eslint/dot-notation": "off",
		"@typescript-eslint/no-floating-promises": "off",
		"@typescript-eslint/no-shadow": "off",
		"@typescript-eslint/naming-convention": "off",
		"@typescript-eslint/padding-line-between-statements": "off",
		"@typescript-eslint/prefer-enum-initializers": "off",
		"@typescript-eslint/prefer-readonly-parameter-types": "off",
		"@typescript-eslint/prefer-regexp-exec": "off",
		"@typescript-eslint/no-magic-numbers": "off",
		"@typescript-eslint/explicit-module-boundary-types": "off",
		"@typescript-eslint/init-declarations": "off",
		"@typescript-eslint/no-unsafe-argument": "off",
		"@typescript-eslint/no-confusing-void-expression": [
			"error",
			{ "ignoreArrowShorthand": true }
		],
		"@typescript-eslint/non-nullable-type-assertion-style": "off",
		"@typescript-eslint/strict-boolean-expressions": "off",
		"@typescript-eslint/no-implicit-any-catch": "off",
		"@typescript-eslint/member-ordering": "off",
		"@typescript-eslint/prefer-includes": "off",
		"@typescript-eslint/no-restricted-imports": "off",
		"@typescript-eslint/no-unsafe-call": "off",
		"import/no-deprecated": "error",
		"import/order": "off",
		"react/no-array-index-key": "off",
		"react-hooks/exhaustive-deps": "off",
		"react/jsx-no-leaked-render": "off",
		"react/require-default-props": "off",
		"react/no-did-update-set-state": "off",
		"react/no-find-dom-node": "off",
		"react/no-is-mounted": "off",
		"react/no-redundant-should-component-update": "off",
		"react/no-render-return-value": "off",
		"react/no-string-refs": "off",
		"react/no-this-in-sfc": "off",
		"react/no-will-update-set-state": "off",
		"react/prefer-es6-class": "off",
		"react/no-unused-state": "off",
		"react/prefer-stateless-function": "off",
		"react/require-render-return": "off",
		"react/sort-comp": "off",
		"react/state-in-constructor": "off",
		"react/static-property-placement": "off",
		"react/display-name": "off",
		"react/function-component-definition": "off",
		"react/jsx-props-no-spreading": "off",
		"react/jsx-filename-extension": [
			1,
			{
				"extensions": [".js", ".jsx", "ts", ".tsx"]
			}
		],
		"react/boolean-prop-naming": [
			"error",
			{
				"validateNested": true
			}
		],
		"react/no-unstable-nested-components": "error",
		"react/jsx-handler-names": [
			"error",
			{
				"eventHandlerPrefix": "on",
				"eventHandlerPropPrefix": "on",
				"checkLocalVariables": true,
				"checkInlineFunction": true
			}
		],
		"react/jsx-key": "error",
		"react/jsx-no-bind": [
			"error",
			{
				"ignoreRefs": false,
				"allowArrowFunctions": true,
				"allowFunctions": true,
				"allowBind": false,
				"ignoreDOMComponents": false
			}
		],
		"react/jsx-no-constructed-context-values": "error",
		"react/jsx-no-script-url": "error",
		"react/jsx-no-useless-fragment": "off",

		"unicorn/filename-case": [
			"error",
			{
				"cases": {
					"camelCase": true,
					"pascalCase": true
				}
			}
		],
		"unicorn/no-nested-ternary": ["error"]
	},
	"settings": {
		"react": {
			"version": "detect"
		}
	},
	"overrides": [
		{
			"files": ["*.ts", "*.tsx"],
			"parserOptions": {
				"project": ["./tsconfig.json"]
			}
		},
		{
			"files": ["vite.config.ts", "cypress.config.ts"],
			"parserOptions": {
				"project": ["./tsconfig.node.json"]
			}
		},
		{
			"files": ["**/__tests__/**/*.ts?(x)"],
			"extends": ["plugin:testing-library/react"],
			"rules": {
				"@typescript-eslint/no-magic-numbers": ["off"],
				"testing-library/no-await-sync-events": [
					"error",
					{
						"eventModules": ["fire-event"]
					}
				],
				"testing-library/no-manual-cleanup": "error",
				"testing-library/prefer-explicit-assert": "error",
				"testing-library/prefer-user-event": "error"
			}
		}
	],
	"ignorePatterns": ["auto-imports.d.ts", "lingui.config.ts"]
}
